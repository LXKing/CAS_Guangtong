<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	<!-- Shiro生命周期处理器-->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>
	
	<!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象 -->
	<bean id="credentialsMatcher" class="cn.guangtong.utils.CustomCredentialsMatcher"></bean>
	
	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
	</bean>
	
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" /><!-- 30天 -->
	</bean>

	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	
	<!-- 会话DAO -->
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>

	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="18000000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	
	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="18000000" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionDAO" ref="sessionDAO" />
	</bean>
	
	<!-- 缓存管理 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:/cn/guangtong/utils/ehcache.xml" />
	</bean>
	
	<!-- <bean id="rememberAuthFilter" class="com.skkj.util.RememberAuthenticationFilter"></bean> -->
	<!-- 使用Shiro自带的JdbcRealm类 指定密码匹配所需要用到的加密对象 指定存储用户、角色、权限许可的数据源及相关查询语句 -->
	<bean id="jdbcRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"></property>
		<property name="permissionsLookupEnabled" value="true"></property>
		<property name="dataSource" ref="dynamicDataSource"></property>
		<property name="authenticationQuery"
			value="SELECT password FROM logistics_cms.admin WHERE username = ?"></property>
		<property name="userRolesQuery"
			value="SELECT aType FROM logistics_cms.admin WHERE username = ?"></property>
		<property name="permissionsQuery"
			value="select b.id as qxmc from logistics_cms.admin_permission a left join logistics_cms.menu b on a.menuId=b.id LEFT JOIN
 						logistics_cms.admin c on a.adminId = c.id where c.username=?"></property>
	</bean>

	<!-- Shiro安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="jdbcRealm"></property>
		<property name="cacheManager" ref="cacheManager"></property>
		<property name="sessionMode" value="native" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<!-- 踢出之前的登录用户 -->
	<bean id="kickoutSessionControlFilter" class="cn.guangtong.utils.KickoutSessionControlFilter">
		<property name="cacheManager" ref="cacheManager" />
		<property name="sessionManager" ref="sessionManager" />

		<property name="kickoutAfter" value="false" />
		<property name="maxSession" value="1" />
		<property name="kickoutUrl" value="/login1/tokickout" />
	</bean>
	
	<!-- Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 Web应用中，Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口，这个属性是必须的 -->
		<property name="securityManager" ref="securityManager"></property>

		<!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
		<property name="loginUrl" value="/guangtong/login.html"></property>
		<!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在LoginController里硬编码) -->
		<!-- <property name="successUrl" value="/" ></property> -->
		<!-- 用户访问未对其授权的资源时，所显示的连接 -->
		<property name="unauthorizedUrl" value="/guangtong/login.html"></property>
		<!--  
        	<property name="filterChainDefinitionMap" ref="filterChainDefinitionMap"></property>
        	配置哪些页面需要受保护,以及访问这些页面需要的权限. 
        	1). anon 可以被匿名访问.
        	2). authc 必须认证(即登录)后才可能访问的页面. 
        	3). logout 登出.
        	4). roles 角色过滤器.
        -->
		<property name="filterChainDefinitions">
			<value>
				/cms/login = anon
				/guangtong/index.html = authc
				
				/cms/getSystemSettingsByPage = authc,perms["8"]
				/cms/toAddSysSetting = authc,perms["8"]
				/cms/addSystemSetting = authc,perms["8"]
				/cms/toUpdateSystemSetting = authc,perms["8"]
				/cms/updateSystemSetting = authc,perms["8"]
				/cms/deleteSystemSetting = authc,perms["8"]
				
				/cms/getPlatLogsByPage = authc,perms["137"]
				/cms/getPlatLogData = authc,perms["137"]
				
				/cms/getMenusByPage = authc,perms["81"]
				/cms/toUpdateMenuPermission = authc,perms["81"]
				/cms/addMenu = authc,perms["81"]
				/cms/toUpdateMenu = authc,perms["81"]
				/cms/updateMenu = authc,perms["81"]
				/cms/deleteMenu = authc,perms["81"]
				/cms/toUpdateMenuPermission = anon
				
				/cms/getAdminsByPage = authc,perms["112"]
				/cms/toAddAdmin = authc,perms["112"]
				/cms/addAdmin = authc,perms["112"]
				/cms/toUpdateAdmin = authc,perms["112"]
				/cms/updateAdmin = authc,perms["112"]
				/cms/deleteAdmin = authc,perms["112"]
				
				
				# everything else requires authentication:
                /** = anon
			</value>
		</property>
	</bean>
	
	<bean id="defaultController" class="cn.guangtong.controller.common.DefaultController" />
	
	<bean id="defaultUrlMapping"
		class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		 <property name="order" value="2147483647" />
		<!--此处的order很重要，要低于 mvc:resources的默认值2147483646 -->
		<property name="mappings">
			<props>
				<prop key="/*/**">defaultController</prop>
			</props>
		</property>
	</bean>
	
</beans>